{"version":3,"file":"static/js/247.5dc95d33.chunk.js","mappings":"8LA6BA,UAzBa,WAET,IAAQA,GAAWC,EAAAA,EAAAA,MAAXD,OACR,GAAwBE,EAAAA,EAAAA,UAAS,IAAjC,eAAOC,EAAP,KAAaC,EAAb,KAWA,IATAC,EAAAA,EAAAA,YAAU,YACNC,EAAAA,EAAAA,GAAUN,GAAQO,MAAK,SAAAC,GAEnBJ,EAAQI,EAAKA,KAAKC,KACrB,IAAEC,OAAM,SAAAC,GACTC,QAAQC,IAAIF,EACX,GACJ,GAAE,CAACX,IAECG,EAIL,OACI,wBACKA,EAAKW,KAAI,gBAAGC,EAAH,EAAGA,UAAWC,EAAd,EAAcA,KAAMC,EAApB,EAAoBA,aAApB,OACL,2BAAe,gBAAKC,IAAKD,EAAY,yCAAqCA,GAAiB,4DAA6DE,IAAI,MAAS,uBAAIH,KAAS,uCAAeD,OAAxLC,EADJ,KAIrB,C,8LC1BKI,EAAO,mCAEAC,EAAK,mCAAG,6FACXC,EADW,mEACuDF,GADvD,SAEMG,EAAAA,EAAAA,IAAUD,GAFhB,cAEXE,EAFW,yBAGVA,GAHU,2CAAH,qDAMLC,EAAS,mCAAG,WAAMC,GAAN,gFAEfJ,EAFe,6CAE6BI,EAF7B,oBAE2CN,EAF3C,4BAGEG,EAAAA,EAAAA,IAAUD,GAHZ,cAGfE,EAHe,yBAIdA,GAJc,2CAAH,sDAOTlB,EAAS,mCAAG,WAAMoB,GAAN,gFACfJ,EADe,6CAC6BI,EAD7B,4BACmDN,EADnD,4BAEEG,EAAAA,EAAAA,IAAUD,GAFZ,cAEfE,EAFe,yBAGdA,GAHc,2CAAH,sDAMTG,EAAW,mCAAG,WAAMD,GAAN,kFACjBE,EAAe,IAAIC,gBAAgB,CACrCC,QAASV,IAEPE,EAJiB,6CAI2BI,EAJ3B,oBAIyCE,GAJzC,SAKAL,EAAAA,EAAAA,IAAUD,GALV,cAKjBE,EALiB,yBAMhBA,GANgB,2CAAH,sDASXO,EAAW,mCAAG,WAAOf,GAAP,kFACjBY,EAAe,IAAIC,gBAAgB,CACrCC,QAASV,EACTY,SAAU,QACVC,KAAM,EACNC,eAAe,EACfC,MAAM,GAAD,OAAKnB,KAERM,EARiB,oDAQkCM,GARlC,SASAL,EAAAA,EAAAA,IAAUD,GATV,cASjBE,EATiB,yBAUhBA,GAVgB,2CAAH,qD","sources":["components/Cast/Cast.jsx","components/Fetch.jsx"],"sourcesContent":["import { useState, useEffect } from \"react\"\nimport { useParams } from \"react-router-dom\"\nimport { fetchCast } from \"components/Fetch\"\n\nconst Cast = () => { \n\n    const { filmId } = useParams()\n    const [film, setfilm] = useState([]);\n\n    useEffect(() => {\n        fetchCast(filmId).then(data => {\n            \n            setfilm(data.data.cast);\n        }).catch(err => {\n        console.log(err);\n        });\n    }, [filmId]);\n\n    if (!film) { \n        return;\n    }\n\n    return (\n        <ul>\n            {film.map(({ character, name, profile_path }) =>\n                (<li key={name}><img src={profile_path ? `https://image.tmdb.org/t/p/w342${profile_path}` : \"https://www.freeiconspng.com/uploads/no-image-icon-23.jpg\"} alt=\"\"></img><p>{name}</p><p>character: {character}</p></li>))}\n        </ul>\n    )\n}\nexport default Cast;","import axios from 'axios';\n\nconst API_KEY = `a929247367e6a655cfe576358218294b`;\n\nexport const fetch = async () => {\n    const url = `https://api.themoviedb.org/3/trending/movie/week?api_key=${API_KEY}`;\n    const response = await axios.get(url);\n    return response;\n};\n\nexport const fetchById = async id => {\n\n    const url = `https://api.themoviedb.org/3/movie/${id}?api_key=${API_KEY}&language=en-US`   \n    const response = await axios.get(url);\n    return response;\n};\n\nexport const fetchCast = async id => {\n    const url = `https://api.themoviedb.org/3/movie/${id}/credits?api_key=${API_KEY}&language=en-US`;\n    const response = await axios.get(url);\n    return response;\n};\n\nexport const fetchReview = async id => {\n    const searchParams = new URLSearchParams({\n        api_key: API_KEY,\n    });\n    const url = `https://api.themoviedb.org/3/movie/${id}/reviews?${searchParams}`;\n    const response = await axios.get(url);\n    return response;\n};\n\nexport const fetchByName = async (name) => {\n    const searchParams = new URLSearchParams({\n        api_key: API_KEY,\n        language: 'en-US',\n        page: 1,\n        include_adult: false,\n        query: `${name}`,\n    });\n    const url = `https://api.themoviedb.org/3/search/movie?${searchParams}`;\n    const response = await axios.get(url);\n    return response;\n};\n"],"names":["filmId","useParams","useState","film","setfilm","useEffect","fetchCast","then","data","cast","catch","err","console","log","map","character","name","profile_path","src","alt","API_KEY","fetch","url","axios","response","fetchById","id","fetchReview","searchParams","URLSearchParams","api_key","fetchByName","language","page","include_adult","query"],"sourceRoot":""}