{"version":3,"file":"static/js/5.a8e3f772.chunk.js","mappings":"4OAGaA,EAAY,SAAC,GAAgB,IAAfC,EAAc,EAAdA,SAEvB,GAAkCC,EAAAA,EAAAA,UAAS,IAA3C,eAAOC,EAAP,KAAkBC,EAAlB,KAkBA,OACI,kBAAMH,SAbW,SAAAI,GACjBA,EAAMC,iBAEmB,KAArBH,EAAUI,QAKdN,EAASE,EAAUI,QACnBH,EAAa,KALTI,MAAM,wHAMb,EAGG,WACI,kBACAC,KAAK,OACLC,aAAa,MACbC,WAAS,EACTC,YAAY,aACZC,SAvBiB,SAAAR,GACrBD,EAAaC,EAAMS,cAAcC,MAAMC,cAC1C,EAsBOD,MAAOZ,EACPc,KAAK,eAEL,mBAAQR,KAAK,SAAb,UACI,yCAIf,E,kBCpCKS,GAAUC,EAAAA,EAAAA,IAAOC,EAAAA,GAAPD,CAAH,iPAePE,EAAKF,EAAAA,GAAAA,GAAH,+CCwBR,EAnCe,WAAO,IAAD,EAEjB,GAAkCjB,EAAAA,EAAAA,UAAS,IAA3C,eAAOoB,EAAP,KAAkBC,EAAlB,KACA,GAAuCC,EAAAA,EAAAA,MAAvC,eAAOC,EAAP,KAAoBC,EAApB,KACMC,EAAQ,UAAGF,EAAYG,IAAI,gBAAnB,QAA+B,GACvCC,GAAWC,EAAAA,EAAAA,OAEjBC,EAAAA,EAAAA,YAAU,WACW,KAAbJ,IAGJK,EAAAA,EAAAA,IAAYL,GACPM,MAAK,SAAAC,GACNX,EAAaW,EAAKA,KAAKC,QACtB,IACAC,OAAM,SAAAC,GACPC,QAAQC,IAAIF,EACX,GACR,GAAE,CAACV,IAQJ,OACA,4BACI,SAAC3B,EAAD,CAAWC,SAPU,SAAAc,GACzBW,EAA0B,KAAVX,EAAe,CAACyB,MAAOzB,GAAS,CAAC,EAChD,KAMG,wBACSO,EAAUmB,KAAI,gBAAEC,EAAF,EAAEA,MAAOC,EAAT,EAASA,GAAT,OAAiB,SAACtB,EAAD,WAAa,SAACH,EAAD,CAAU0B,GAA0B,MAAtBf,EAASgB,SAAT,iBAAsCF,GAAtC,UAAgDA,GAAMG,MAAO,CAAEC,KAAMlB,GAAnF,SAAgGa,KAApGC,EAA1B,QAI9B,C,8LCvCKK,EAAO,mCAEAC,EAAK,mCAAG,6FACXC,EADW,mEACuDF,GADvD,SAEMG,EAAAA,EAAAA,IAAUD,GAFhB,cAEXE,EAFW,yBAGVA,GAHU,2CAAH,qDAMLC,EAAS,mCAAG,WAAMV,GAAN,gFAEfO,EAFe,6CAE6BP,EAF7B,oBAE2CK,EAF3C,4BAGEG,EAAAA,EAAAA,IAAUD,GAHZ,cAGfE,EAHe,yBAIdA,GAJc,2CAAH,sDAOTE,EAAS,mCAAG,WAAMX,GAAN,gFACfO,EADe,6CAC6BP,EAD7B,4BACmDK,EADnD,4BAEEG,EAAAA,EAAAA,IAAUD,GAFZ,cAEfE,EAFe,yBAGdA,GAHc,2CAAH,sDAMTG,EAAW,mCAAG,WAAMZ,GAAN,kFACjBa,EAAe,IAAIC,gBAAgB,CACrCC,QAASV,IAEPE,EAJiB,6CAI2BP,EAJ3B,oBAIyCa,GAJzC,SAKAL,EAAAA,EAAAA,IAAUD,GALV,cAKjBE,EALiB,yBAMhBA,GANgB,2CAAH,sDASXpB,EAAW,mCAAG,WAAOf,GAAP,kFACjBuC,EAAe,IAAIC,gBAAgB,CACrCC,QAASV,EACTW,SAAU,QACVC,KAAM,EACNC,eAAe,EACfrB,MAAM,GAAD,OAAKvB,KAERiC,EARiB,oDAQkCM,GARlC,SASAL,EAAAA,EAAAA,IAAUD,GATV,cASjBE,EATiB,yBAUhBA,GAVgB,2CAAH,qD","sources":["components/SerchForm/SerchForm.jsx","Pages/Movies/Movies.styled.jsx","Pages/Movies/Movies.jsx","components/Fetch.jsx"],"sourcesContent":["import { useState } from \"react\";\nimport PropTypes from 'prop-types';\n\nexport const SerchForm = ({onSubmit}) => { \n\n    const [movieName, setMovieName] = useState('')\n\n    const handleNameChange = event => {\n        setMovieName(event.currentTarget.value.toLowerCase())\n    }\n\n    const handleSubmit = event => { \n        event.preventDefault();\n\n        if (movieName.trim() === '') { \n            alert(\"Введите имя для поиска\")\n            return;\n        }\n\n        onSubmit(movieName.trim())\n        setMovieName('');\n    }\n\n    return (\n        <form onSubmit={handleSubmit}>\n            <input\n            type=\"text\"\n            autoComplete=\"off\"\n            autoFocus\n            placeholder=\"Movie name\"\n            onChange={handleNameChange}\n            value={movieName}\n            name='movieName'\n            />\n            <button type=\"submit\">\n                <span>Search</span>\n            </button>\n        </form>\n    )\n}\nSerchForm.propTypes = {\n    onSubmit: PropTypes.func.isRequired,\n};","import styled from 'styled-components';\nimport { NavLink } from \"react-router-dom\";\n\nconst NavItem = styled(NavLink)`\n    color: black;\n    text-decoration: none;\n    font-size: 20px;\n\n    &.active {\n        color: tomato;\n    }\n    \n    :hover:not(.active),\n    :focus-visible:not(.active) {\n        color: tomato\n    }\n\n`\nconst Li = styled.li`\n    list-style: none;\n`\nexport {NavItem, Li}","import { useState, useEffect } from \"react\"\nimport { useSearchParams } from 'react-router-dom';\nimport { useLocation } from 'react-router-dom';\nimport { fetchByName } from \"components/Fetch\";\nimport { SerchForm } from \"components/SerchForm/SerchForm\";\nimport { NavItem, Li } from \"./Movies.styled\";\n\nconst Movies = () => { \n\n    const [movieList, setMovieList] = useState([]);\n    const [seachParams, setSearchParams] = useSearchParams();\n    const parametr = seachParams.get('query') ?? '';\n    const location = useLocation();\n\n    useEffect(() => {\n        if (parametr === '') { \n            return;\n        }\n        fetchByName(parametr)\n            .then(data => {\n            setMovieList(data.data.results);\n            })\n            .catch(err => {\n            console.log(err);\n            });\n    }, [parametr]);\n    \n\n    const handleFormSubmit = value => { \n    setSearchParams(value !== \"\" ? {query: value} : {})\n    }\n\n\n    return (\n    <div>\n        <SerchForm onSubmit={handleFormSubmit} />\n        <ul>\n                {movieList.map(({title, id}) => <Li key={id}><NavItem  to={location.pathname === '/' ? `movies/${id}` : `${id}`} state={{ from: location }}>{title}</NavItem></Li> ) }    \n        </ul>\n    </div>\n    )\n}\nexport default Movies;","import axios from 'axios';\n\nconst API_KEY = `a929247367e6a655cfe576358218294b`;\n\nexport const fetch = async () => {\n    const url = `https://api.themoviedb.org/3/trending/movie/week?api_key=${API_KEY}`;\n    const response = await axios.get(url);\n    return response;\n};\n\nexport const fetchById = async id => {\n\n    const url = `https://api.themoviedb.org/3/movie/${id}?api_key=${API_KEY}&language=en-US`   \n    const response = await axios.get(url);\n    return response;\n};\n\nexport const fetchCast = async id => {\n    const url = `https://api.themoviedb.org/3/movie/${id}/credits?api_key=${API_KEY}&language=en-US`;\n    const response = await axios.get(url);\n    return response;\n};\n\nexport const fetchReview = async id => {\n    const searchParams = new URLSearchParams({\n        api_key: API_KEY,\n    });\n    const url = `https://api.themoviedb.org/3/movie/${id}/reviews?${searchParams}`;\n    const response = await axios.get(url);\n    return response;\n};\n\nexport const fetchByName = async (name) => {\n    const searchParams = new URLSearchParams({\n        api_key: API_KEY,\n        language: 'en-US',\n        page: 1,\n        include_adult: false,\n        query: `${name}`,\n    });\n    const url = `https://api.themoviedb.org/3/search/movie?${searchParams}`;\n    const response = await axios.get(url);\n    return response;\n};\n"],"names":["SerchForm","onSubmit","useState","movieName","setMovieName","event","preventDefault","trim","alert","type","autoComplete","autoFocus","placeholder","onChange","currentTarget","value","toLowerCase","name","NavItem","styled","NavLink","Li","movieList","setMovieList","useSearchParams","seachParams","setSearchParams","parametr","get","location","useLocation","useEffect","fetchByName","then","data","results","catch","err","console","log","query","map","title","id","to","pathname","state","from","API_KEY","fetch","url","axios","response","fetchById","fetchCast","fetchReview","searchParams","URLSearchParams","api_key","language","page","include_adult"],"sourceRoot":""}