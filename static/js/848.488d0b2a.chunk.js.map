{"version":3,"file":"static/js/848.488d0b2a.chunk.js","mappings":"8SAEMA,EAAO,mCAEAC,EAAK,mCAAG,6FACXC,EADW,mEACuDF,GADvD,SAEMG,EAAAA,EAAAA,IAAUD,GAFhB,cAEXE,EAFW,yBAGVA,GAHU,2CAAH,qDAMLC,EAAS,mCAAG,WAAMC,GAAN,gFAEfJ,EAFe,6CAE6BI,EAF7B,oBAE2CN,EAF3C,4BAGEG,EAAAA,EAAAA,IAAUD,GAHZ,cAGfE,EAHe,yBAIdA,GAJc,2CAAH,sDAOTG,EAAS,mCAAG,WAAMD,GAAN,gFACfJ,EADe,6CAC6BI,EAD7B,4BACmDN,EADnD,4BAEEG,EAAAA,EAAAA,IAAUD,GAFZ,cAEfE,EAFe,yBAGdA,GAHc,2CAAH,sDAMTI,EAAW,mCAAG,WAAMF,GAAN,kFACjBG,EAAe,IAAIC,gBAAgB,CACrCC,QAASX,IAEPE,EAJiB,6CAI2BI,EAJ3B,oBAIyCG,GAJzC,SAKAN,EAAAA,EAAAA,IAAUD,GALV,cAKjBE,EALiB,yBAMhBA,GANgB,2CAAH,sDASXQ,EAAW,mCAAG,WAAOC,GAAP,kFACjBJ,EAAe,IAAIC,gBAAgB,CACrCC,QAASX,EACTc,SAAU,QACVC,KAAM,EACNC,eAAe,EACfC,MAAM,GAAD,OAAKJ,KAERX,EARiB,oDAQkCO,GARlC,SASAN,EAAAA,EAAAA,IAAUD,GATV,cASjBE,EATiB,yBAUhBA,GAVgB,2CAAH,qD,8ECLxB,UAvBgB,WAEZ,IAAQc,GAAWC,EAAAA,EAAAA,MAAXD,OACR,GAA8BE,EAAAA,EAAAA,UAAS,IAAvC,eAAOC,EAAP,KAAgBC,EAAhB,KAYA,OAVAC,EAAAA,EAAAA,YAAU,YACNf,EAAAA,EAAAA,IAAYU,GAAQM,MAAK,SAAAC,GACrBH,EAAWG,EAAKA,KAAKC,QAExB,IAAEC,OAAM,SAAAC,GACTC,QAAQC,IAAIF,EACX,GACJ,GAAE,CAACV,KAIA,0BACKG,EAAQU,KAAI,gBAAGC,EAAH,EAAGA,OAAQC,EAAX,EAAWA,QAAQ3B,EAAnB,EAAmBA,GAAnB,OACR,2BAAa,uBAAI0B,KAAW,qCAAaC,EAAb,SAAnB3B,EADD,IAEO,IAAnBe,EAAQa,SAAgB,kEAGpC,C","sources":["components/Fetch.jsx","components/Rewiews/Rewiews.jsx"],"sourcesContent":["import axios from 'axios';\n\nconst API_KEY = `a929247367e6a655cfe576358218294b`;\n\nexport const fetch = async () => {\n    const url = `https://api.themoviedb.org/3/trending/movie/week?api_key=${API_KEY}`;\n    const response = await axios.get(url);\n    return response;\n};\n\nexport const fetchById = async id => {\n\n    const url = `https://api.themoviedb.org/3/movie/${id}?api_key=${API_KEY}&language=en-US`   \n    const response = await axios.get(url);\n    return response;\n};\n\nexport const fetchCast = async id => {\n    const url = `https://api.themoviedb.org/3/movie/${id}/credits?api_key=${API_KEY}&language=en-US`;\n    const response = await axios.get(url);\n    return response;\n};\n\nexport const fetchReview = async id => {\n    const searchParams = new URLSearchParams({\n        api_key: API_KEY,\n    });\n    const url = `https://api.themoviedb.org/3/movie/${id}/reviews?${searchParams}`;\n    const response = await axios.get(url);\n    return response;\n};\n\nexport const fetchByName = async (name) => {\n    const searchParams = new URLSearchParams({\n        api_key: API_KEY,\n        language: 'en-US',\n        page: 1,\n        include_adult: false,\n        query: `${name}`,\n    });\n    const url = `https://api.themoviedb.org/3/search/movie?${searchParams}`;\n    const response = await axios.get(url);\n    return response;\n};\n","import { useState, useEffect } from \"react\"\nimport { useParams } from \"react-router-dom\"\nimport { fetchReview } from \"components/Fetch\"\n\nconst Rewiews = () => { \n\n    const { filmId } = useParams()\n    const [rewiews, setRewiews] = useState([]);\n\n    useEffect(() => {\n        fetchReview(filmId).then(data => {\n            setRewiews(data.data.results);\n            \n        }).catch(err => {\n        console.log(err);\n        });\n    }, [filmId]);\n    \n\n    return (\n        <ul>\n            {rewiews.map(({ author, content,id }) =>\n                (<li key={id}><p>{author}</p><p>content: {content} </p></li>))}\n            {rewiews.length === 0 && <p>We have no any rewiew for this movie</p>}\n        </ul>\n    )\n}\nexport default Rewiews;\n"],"names":["API_KEY","fetch","url","axios","response","fetchById","id","fetchCast","fetchReview","searchParams","URLSearchParams","api_key","fetchByName","name","language","page","include_adult","query","filmId","useParams","useState","rewiews","setRewiews","useEffect","then","data","results","catch","err","console","log","map","author","content","length"],"sourceRoot":""}